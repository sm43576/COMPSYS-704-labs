import java.util.ArrayList;
Orchestrator(
		input String channel conveyorStatus, capperStatus, capLoaderStatus, fillerStatus, rotaryStatus;
		output Boolean channel conveyorReq, allOperationsFinished, fillerReq, capperReq, capLoaderReq;
		input Order channel order;
		output Order channel doneOrder;
		
		output ArrayList channel percentLiquid;
		
		)
->{
	// TODO: Temp delete later
	
//	int quantity = 5;
//	int bottlePlaced = 0;
	signal getNextBottle;
	// final
	{// Conveyor Orchestator logic
		// Assumption - only one order at a time.
		int quantity = 5;
		int bottlePlaced = 0; 
		ArrayList liquidPercent = new ArrayList();
		liquidPercent.add(10);
		liquidPercent.add(10);
		liquidPercent.add(20);
		liquidPercent.add(60);
		while(true) {
			// insert present(order) here
			bottlePlaced = quantity;
			while(bottlePlaced >= 0) {
				System.out.println("sending conveyor req?");
				send conveyorReq(true);
				bottlePlaced--;
				System.out.println(liquidPercent.get(3));
				await(getNextBottle);
				
				pause;
			}
			
			System.out.println("Done order");
			//TODO: send doneOrder signal
//			send doneOrder(order)
			pause;
		}
	}
	||
	{// Requesting work to filler, capper and caploader
		while(true) {
			receive rotaryStatus;
			String rotaryStat = #rotaryStatus;
			
			// wait for rotary status to be done
			if(rotaryStat == "done") {
				System.out.println("rotary done, sending filler,loader,screwer, conveyor reqs");
				send fillerReq(true);
				send capLoaderReq(true);
				send capperReq(true);
				emit getNextBottle;
			}
			pause;
		}
		
	}
	||
	{ // Rotary Orchestrator logic
		while(true) {
			receive conveyorStatus; 
			receive fillerStatus;
			receive capLoaderStatus;
			receive capperStatus;
			
			String conveyStat = #conveyorStatus;
			String fillerStat = #fillerStatus;
			String screwerStat = #capLoaderStatus;
			String loaderStat = #capperStatus;
			
			// wait until everything else is done or idle
			if((conveyStat == "done" || conveyStat == "idle") && 
				(fillerStat == "done" || fillerStat == "idle") &&  
				(screwerStat == "done" || screwerStat == "idle") && 
				(loaderStat == "done" || loaderStat == "idle")) {
				System.out.println("sending request to rotary?");
				send allOperationsFinished(true);
			}
			pause;
		}
	}
}




